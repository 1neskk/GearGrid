{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "GearGrid",
    "description" : "GearGrid is an E-Commerce specialized in selling high-performance computer peripherals. Learn more about GearGrid at\n[geargrid.digital](http://geargrid.digital) or at\n[Github](https://github.com/1neskk/GearGrid).\n",
    "termsOfService" : "",
    "contact" : {
      "email" : "contact@nesk.lol"
    },
    "license" : {
      "name" : "MIT License",
      "url" : "https://www.mit.edu/~amini/LICENSE.md"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/CONTATONESK/GearGrid/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "tags" : [ {
    "name" : "product",
    "description" : "Operations about store products",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://geargrid.digital"
    }
  }, {
    "name" : "user",
    "description" : "Operations about user",
    "externalDocs" : {
      "description" : "Find out more about our store",
      "url" : "http://geargrid.digital"
    }
  } ],
  "paths" : {
    "/product" : {
      "put" : {
        "tags" : [ "product" ],
        "summary" : "Update an existing product",
        "operationId" : "updateProduct",
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Product not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "post" : {
        "tags" : [ "product" ],
        "summary" : "Add a new product to the database",
        "operationId" : "addProduct",
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/product/fetch" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "Fetch products",
        "operationId" : "fetchProduct",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "id values that need to be considered for fetching data",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid status value"
          }
        }
      }
    },
    "/product/{productId}" : {
      "delete" : {
        "tags" : [ "product" ],
        "summary" : "Deletes a product",
        "operationId" : "deleteProduct",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Product not found"
          }
        }
      }
    },
    "/user" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "registerUser",
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user/login" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs user into the system",
        "operationId" : "loginUser",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "The user name for login",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The password for login in clear text",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs out current logged in user session",
        "operationId" : "logout",
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user/{email}" : {
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "description" : "The email that needs to be deleted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid email supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    }
  },
  "components" : { }
}